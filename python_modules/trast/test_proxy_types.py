#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –ø—Ä–æ–∫—Å–∏
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç HTTP, HTTPS, SOCKS4, SOCKS5 –ø—Ä–æ–∫—Å–∏ –æ—Ç–¥–µ–ª—å–Ω–æ
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path
project_root = Path(__file__).resolve().parents[3]
sys.path.append(str(project_root))

from proxy_manager import ProxyManager
import logging
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def test_proxy_types():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–∞–∂–¥—ã–π —Ç–∏–ø –ø—Ä–æ–∫—Å–∏ –æ—Ç–¥–µ–ª—å–Ω–æ"""
    print("=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ö–°–ò –ü–û –¢–ò–ü–ê–ú ===")
    
    proxy_manager = ProxyManager()
    
    print("–°–∫–∞—á–∏–≤–∞–µ–º —Å–≤–µ–∂–∏–µ –ø—Ä–æ–∫—Å–∏...")
    proxy_manager.download_proxies()
    
    print("–ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–∫—Å–∏...")
    proxy_manager.load_proxies()
    
    print(f"–í—Å–µ–≥–æ –ø—Ä–æ–∫—Å–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {len(proxy_manager.proxies)}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º
    protocol_stats = {}
    for proxy in proxy_manager.proxies:
        protocol = proxy.get('protocol', 'http').lower()
        protocol_stats[protocol] = protocol_stats.get(protocol, 0) + 1
    
    print("\n–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–∫—Å–∏ –ø–æ —Ç–∏–ø–∞–º:")
    for protocol, count in protocol_stats.items():
        print(f"  {protocol.upper()}: {count} –ø—Ä–æ–∫—Å–∏")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π —Ç–∏–ø –æ—Ç–¥–µ–ª—å–Ω–æ
    test_site = "https://trast-zapchast.ru/shop/"
    
    for protocol in ['http', 'https', 'socks4', 'socks5']:
        print(f"\n{'='*50}")
        print(f"–¢–ï–°–¢–ò–†–£–ï–ú {protocol.upper()} –ü–†–û–ö–°–ò")
        print(f"{'='*50}")
        
        # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 10 –ø—Ä–æ–∫—Å–∏ —ç—Ç–æ–≥–æ —Ç–∏–ø–∞
        proxies_of_type = [p for p in proxy_manager.proxies if p.get('protocol', '').lower() == protocol][:10]
        
        if not proxies_of_type:
            print(f"–ù–µ—Ç –ø—Ä–æ–∫—Å–∏ —Ç–∏–ø–∞ {protocol.upper()}")
            continue
            
        print(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º {len(proxies_of_type)} –ø—Ä–æ–∫—Å–∏ —Ç–∏–ø–∞ {protocol.upper()}:")
        
        working_count = 0
        for i, proxy in enumerate(proxies_of_type):
            print(f"\n{i+1}. {proxy['ip']}:{proxy['port']} ({proxy.get('country', 'Unknown')})")
            
            start_time = time.time()
            result = proxy_manager.validate_proxy_for_site(proxy, test_site, timeout=20)
            end_time = time.time()
            
            status = "‚úÖ –†–ê–ë–û–¢–ê–ï–¢" if result else "‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
            duration = f"{end_time - start_time:.1f}—Å"
            
            print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {status} (–≤—Ä–µ–º—è: {duration})")
            
            if result:
                working_count += 1
                print(f"   üéâ –ù–ê–ô–î–ï–ù –†–ê–ë–û–ß–ò–ô –ü–†–û–ö–°–ò!")
                print(f"   üìç –ü—Ä–æ–∫—Å–∏ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                break  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ
        
        print(f"\n–ò—Ç–æ–≥–æ —Ä–∞–±–æ—á–∏—Ö {protocol.upper()} –ø—Ä–æ–∫—Å–∏: {working_count}/{len(proxies_of_type)}")
        
        if working_count > 0:
            print(f"‚úÖ {protocol.upper()} –ø—Ä–æ–∫—Å–∏ –†–ê–ë–û–¢–ê–Æ–¢!")
        else:
            print(f"‚ùå {protocol.upper()} –ø—Ä–æ–∫—Å–∏ –ù–ï –†–ê–ë–û–¢–ê–Æ–¢")
    
    print(f"\n{'='*50}")
    print("–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")
    print(f"{'='*50}")

if __name__ == "__main__":
    test_proxy_types()
