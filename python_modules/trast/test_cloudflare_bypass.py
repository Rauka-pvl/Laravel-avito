#!/usr/bin/env python3
"""
–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –æ–±—Ö–æ–¥–∞ Cloudflare
"""

import requests
import time
import random
from selenium import webdriver
from selenium.webdriver.firefox.options import Options
from selenium.webdriver.firefox.service import Service
import geckodriver_autoinstaller

def test_direct_access():
    """–¢–µ—Å—Ç –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –±–µ–∑ –ø—Ä–æ–∫—Å–∏"""
    print("=== –¢–ï–°–¢ –ü–†–Ø–ú–û–ì–û –î–û–°–¢–£–ü–ê ===")
    
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8',
        'Accept-Language': 'ru-RU,ru;q=0.9,en;q=0.8',
        'Accept-Encoding': 'gzip, deflate, br',
        'DNT': '1',
        'Connection': 'keep-alive',
        'Upgrade-Insecure-Requests': '1',
        'Sec-Fetch-Dest': 'document',
        'Sec-Fetch-Mode': 'navigate',
        'Sec-Fetch-Site': 'none',
        'Sec-Fetch-User': '?1',
        'Cache-Control': 'max-age=0'
    }
    
    try:
        response = requests.get("https://trast-zapchast.ru/shop/", headers=headers, timeout=10)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"–†–∞–∑–º–µ—Ä: {len(response.content)} –±–∞–π—Ç")
        
        if response.status_code == 200:
            content = response.text.lower()
            if "cloudflare" in content:
                print("‚ùå Cloudflare –±–ª–æ–∫–∏—Ä—É–µ—Ç –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø")
            elif "shop" in content or "—Ç–æ–≤–∞—Ä" in content:
                print("‚úÖ –ü—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                return True
            else:
                print("‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ")
        else:
            print(f"‚ùå HTTP {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    return False

def test_mobile_user_agent():
    """–¢–µ—Å—Ç —Å –º–æ–±–∏–ª—å–Ω—ã–º User-Agent"""
    print("\n=== –¢–ï–°–¢ –ú–û–ë–ò–õ–¨–ù–û–ì–û USER-AGENT ===")
    
    mobile_headers = {
        'User-Agent': 'Mozilla/5.0 (iPhone; CPU iPhone OS 17_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.1 Mobile/15E148 Safari/604.1',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
        'Accept-Language': 'ru-RU,ru;q=0.9,en;q=0.8',
        'Accept-Encoding': 'gzip, deflate, br',
        'DNT': '1',
        'Connection': 'keep-alive',
        'Upgrade-Insecure-Requests': '1'
    }
    
    try:
        response = requests.get("https://trast-zapchast.ru/shop/", headers=mobile_headers, timeout=10)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"–†–∞–∑–º–µ—Ä: {len(response.content)} –±–∞–π—Ç")
        
        if response.status_code == 200:
            content = response.text.lower()
            if "cloudflare" in content:
                print("‚ùå Cloudflare –±–ª–æ–∫–∏—Ä—É–µ—Ç –º–æ–±–∏–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø")
            elif "shop" in content or "—Ç–æ–≤–∞—Ä" in content:
                print("‚úÖ –ú–æ–±–∏–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                return True
            else:
                print("‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ")
        else:
            print(f"‚ùå HTTP {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    return False

def test_selenium_without_proxy():
    """–¢–µ—Å—Ç Selenium –±–µ–∑ –ø—Ä–æ–∫—Å–∏"""
    print("\n=== –¢–ï–°–¢ SELENIUM –ë–ï–ó –ü–†–û–ö–°–ò ===")
    
    try:
        geckodriver_autoinstaller.install()
        
        options = Options()
        options.add_argument("--headless")
        options.add_argument("--no-sandbox")
        options.add_argument("--disable-gpu")
        options.add_argument("--disable-dev-shm-usage")
        
        # DNS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        options.add_argument("--dns-prefetch-disable")
        options.set_preference("network.dns.disablePrefetch", True)
        options.set_preference("network.dns.defaultIPv4", "8.8.8.8")
        
        # –û–±—Ö–æ–¥ –¥–µ—Ç–µ–∫—Ü–∏–∏
        options.set_preference("dom.webdriver.enabled", False)
        options.set_preference("useAutomationExtension", False)
        
        # –°–ª—É—á–∞–π–Ω—ã–π User-Agent
        user_agents = [
            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36",
            "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/121.0",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/121.0"
        ]
        options.set_preference("general.useragent.override", random.choice(user_agents))
        
        # –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–µ —Ç–∞–π–º–∞—É—Ç—ã
        options.set_preference("network.http.connection-timeout", 60)
        options.set_preference("network.http.response.timeout", 60)
        options.set_preference("network.dns.timeout", 30)
        
        service = Service()
        driver = webdriver.Firefox(service=service, options=options)
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã
        driver.execute_script("Object.defineProperty(navigator, 'webdriver', {get: () => undefined})")
        driver.execute_script("Object.defineProperty(navigator, 'plugins', {get: () => [1, 2, 3, 4, 5]})")
        
        print("–ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É...")
        driver.get("https://trast-zapchast.ru/shop/")
        time.sleep(5)
        
        page_source = driver.page_source
        print(f"–†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {len(page_source)} –±–∞–π—Ç")
        
        if "cloudflare" in page_source.lower():
            print("‚ùå Cloudflare –±–ª–æ–∫–∏—Ä—É–µ—Ç Selenium")
        elif "shop" in page_source.lower() or "—Ç–æ–≤–∞—Ä" in page_source.lower():
            print("‚úÖ Selenium –±–µ–∑ –ø—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            driver.quit()
            return True
        else:
            print("‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ")
            print(f"–ü–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤: {page_source[:200]}...")
        
        driver.quit()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Selenium: {e}")
    
    return False

def test_alternative_urls():
    """–¢–µ—Å—Ç –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö URL"""
    print("\n=== –¢–ï–°–¢ –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–• URL ===")
    
    urls_to_test = [
        "https://trast-zapchast.ru/",
        "http://trast-zapchast.ru/shop/",
        "https://trast-zapchast.ru/shop/?_paged=1",
        "https://trast-zapchast.ru/shop/?page=1",
        "https://trast-zapchast.ru/catalog/",
        "https://trast-zapchast.ru/products/"
    ]
    
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
        'Accept-Language': 'ru-RU,ru;q=0.9,en;q=0.8'
    }
    
    for url in urls_to_test:
        try:
            print(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º: {url}")
            response = requests.get(url, headers=headers, timeout=10)
            print(f"  –°—Ç–∞—Ç—É—Å: {response.status_code}")
            
            if response.status_code == 200:
                content = response.text.lower()
                if "cloudflare" in content:
                    print("  ‚ùå Cloudflare")
                elif "shop" in content or "—Ç–æ–≤–∞—Ä" in content or "–∫–∞—Ç–∞–ª–æ–≥" in content:
                    print("  ‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω!")
                    return url
                else:
                    print("  ‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ")
            else:
                print(f"  ‚ùå HTTP {response.status_code}")
                
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    return None

if __name__ == "__main__":
    print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–• –°–¢–†–ê–¢–ï–ì–ò–ô ===")
    
    # –¢–µ—Å—Ç 1: –ü—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø
    if test_direct_access():
        print("üéâ –ü—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        exit(0)
    
    # –¢–µ—Å—Ç 2: –ú–æ–±–∏–ª—å–Ω—ã–π User-Agent
    if test_mobile_user_agent():
        print("üéâ –ú–æ–±–∏–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        exit(0)
    
    # –¢–µ—Å—Ç 3: Selenium –±–µ–∑ –ø—Ä–æ–∫—Å–∏
    if test_selenium_without_proxy():
        print("üéâ Selenium –±–µ–∑ –ø—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        exit(0)
    
    # –¢–µ—Å—Ç 4: –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ URL
    working_url = test_alternative_urls()
    if working_url:
        print(f"üéâ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π URL —Ä–∞–±–æ—Ç–∞–µ—Ç: {working_url}")
        exit(0)
    
    print("\n‚ùå –í—Å–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã Cloudflare")
